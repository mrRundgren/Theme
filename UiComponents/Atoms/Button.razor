@inherits UiComponentBase

<button
    @attributes="Attributes"
    @onmouseup="OnMouseUp"
    @onmousedown="OnMouseDown"
    @onblur="OnBlur"
    class="@(CssClass)"
    role="button">
    @ChildContent
    @if (RippleEffect)
    {
        <Ripple @bind-Args="Args"/>
    }
</button>

@code {

    [Parameter] public string Style { get; set; } = Theming.ButtonStyles.Base;
    [Parameter] public bool RippleEffect { get; set; } = true;
    [Parameter] public bool FocusEffect { get; set; } = true;
    [Parameter] public MouseEventArgs? Args { get; set; }

    private string? VariantCssClass => Style switch
    {
        Theming.ButtonStyles.Primary => Theme.PrimaryButton,
        Theming.ButtonStyles.Secondary => Theme.SecondaryButton,
        Theming.ButtonStyles.Danger => Theme.DangerButton,
        Theming.ButtonStyles.Invisible => Theme.InvisibleButton,
        Theming.ButtonStyles.Icon => Theme.IconButton,
        _ => Theme.BaseButton
    };

    protected string CssClass => string.Join(' ',
        Theme.BaseButton,
        FocusEffect ? Theme.FocusEffect : string.Empty,
        VariantCssClass,
        ClassAttribute
    );

    private void OnMouseUp(MouseEventArgs e) => Args = e;
    private void OnMouseDown() => Args = null;
    private void OnBlur() => Args = null;
}