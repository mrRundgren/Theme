<div
    @onmousedown="@(() => Args = null)"
    @onmouseup="@((e) => Args = e)"
    @onblur="@(() => Args = null)"
    class="@CssClass">
    @if (Args is not null)
    {
        <ripple style="@($"top: {Args.OffsetY}px; left: {Args.OffsetX}px;")"/>
    }
</div>

@code {
    [Inject] public ThemeManager Theme { get; set; } = new();

    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object> UnmatchedAttributes { get; set; } = new();

    private Dictionary<string, object> Attributes => UnmatchedAttributes.Where(a => a.Key != "class").ToDictionary();
    private string? ClassAttribute => UnmatchedAttributes.FirstOrDefault(a => a.Key == "class").Value?.ToString();
    private MouseEventArgs? Args { get; set; }
    private string Style => Args is not null ? $"top: {Args.OffsetY}px; left: {Args.OffsetX}px;" : "top: 50%; left: 50%;";
    private void OnMouseDown(MouseEventArgs e) => Args = e;

    private string CssClass => string.Join(" ", [Theme.RippleCss, ClassAttribute]).Trim();
}